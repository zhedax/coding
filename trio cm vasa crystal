// vasa cm trio 0 crystal simulations // update as of 2024 06 30

#include <iostream>
#include <iomanip>
#include <math.h>
#include <time.h>
#include <stdlib.h>
#include <string>

using namespace std;
#include <random>

bool splash = false;

int zcbspec = 110; // max hit, no rigour, 120 ranged
int TbowMax = 96; // max hit, rigour, 120 ranged

int max_att_roll_zcb_spec = 46816 * 2; // with rigour
int max_att_roll_zcb_spec_no_rig = 39424 * 2; // no rigour
int max_att_roll_tbow = 57030; // with rigour
int MaxRangeDefrolltbow = 28704; // standard ranged
int MaxRangeDefrollzcb = 25944; // heavy ranged

int kill = 0; int noodle = 0;
int sims = 100000;
random_device rd;
mt19937 gen(time(NULL));

//function for random generating number for attack/def rolls
int getRandom(int from, int to) {
	uniform_int_distribution<int> distribution(from,to);
	return distribution(gen);
}

int main()
{
    for (int i = 1; i <= sims; i++) // number of sims
    {
        int dpa = 0;
        int VasaHp = 900;
        //cout << "Vasa hp at the start: " << VasaHp << endl;
        VasaHp = 900 - 57*3; // veng damage
        //cout << "Vasa hp after veng:" << VasaHp << endl;
        
        //cout << "zcb specs begin" << endl;
        for (int j = 1; j <= 2; j++) // zcb specs with rigour
        {
            double defroll = getRandom(0,MaxRangeDefrollzcb); // function takes random number from 0 to maxdef roll
            double attroll = getRandom(0, max_att_roll_zcb_spec_no_rig); // function takes random number from 0 to max zcb roll. no rigour
            if ( attroll > defroll )
            {
                splash = false;
                VasaHp = VasaHp - zcbspec; //-110 hp basically
            }
            else splash = true;
            //cout << "Vasa hp " << VasaHp << endl;
        }
        double defroll = getRandom(0,MaxRangeDefrollzcb); // function takes random number from 0 to maxdef roll
        double attroll = getRandom(0, max_att_roll_zcb_spec); // function takes random number from 0 to max zcb roll. this hit is with rigour
        if ( attroll > defroll )
        {
            splash = false;
            VasaHp = VasaHp - zcbspec; //-110 hp basically
        }
        else splash = true;
        
        
        
        
        
        //cout << "tbow rapid begins (9 hits)" << endl;
        for (int k = 1; k <= 9; k++) // tbow cycles, rapid
        {
            double defroll = getRandom(0,MaxRangeDefrolltbow);
            double attroll = getRandom(0, max_att_roll_tbow);
            if ( attroll > defroll )
            {
                dpa = getRandom(1,TbowMax); // from 1 to max hit, as recent changes to dps suggest
                splash = false;
                VasaHp = VasaHp - dpa;
            }
            else splash = true;
            //cout << "Vasa hp " << VasaHp << endl;
        }
        // --------------- tracking variables --------------------
        if (VasaHp > 0) noodle = noodle +1;
        if (VasaHp <= 0) kill = kill +1;    
    }

        
        cout << "simulations ran: " << sims << endl;
        cout << "Vasa was killed " << kill << " times" << endl;
        cout << "Vasa was not killed " << noodle << " times" << endl;
        double percent = (double) kill / (kill + noodle)*100;
        double oneinx = (double) 1 / percent * 100;
        cout << "0 crystal chance is approx. " << percent << " % or 1 in " << oneinx << endl;
    
}
